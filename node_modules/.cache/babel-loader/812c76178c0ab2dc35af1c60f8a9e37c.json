{"ast":null,"code":"var _jsxFileName = \"/home/dev/Desktop/tic-tac-toe/whether-react/src/App.jsx\";\nimport React, { useState } from 'react';\nconst api = {\n  key: \"82ea138518939bd04bbc2f5747a79df1\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n};\n\nfunction App() {\n  const [query, setQuery] = useState('');\n  const [weather, setweather] = useState({});\n  const [weathers, setforecast] = useState({});\n\n  const search = evt => {\n    if (evt.key === \"Enter\") {\n      fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`).then(res => res.json()).then(result => {\n        setweather(result);\n        setforecast(result);\n        setQuery('');\n        console.log(result);\n      });\n    }\n  };\n\n  const dateBuilder = d => {\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"december\"];\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n    return `${day} ${date} ${month} ${year}`;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: typeof weather.main != \"undefined\" ? weather.main.temp > 24 ? 'app warm' : 'app' : 'app',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"search-bar\",\n    placeholder: \"Search...\",\n    onChange: e => setQuery(e.target.value),\n    value: query,\n    onKeyPress: search,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  })), typeof weather.main != \"undefined\" ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"location-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"location\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, weather.name, \",\", weather.sys.country), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, dateBuilder(new Date()))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"weather-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"temp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, Math.round(weather.main.temp), \"c\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"weather\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, weather.weather[0].main))) : ''));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/dev/Desktop/tic-tac-toe/whether-react/src/App.jsx"],"names":["React","useState","api","key","base","App","query","setQuery","weather","setweather","weathers","setforecast","search","evt","fetch","then","res","json","result","console","log","dateBuilder","d","months","days","day","getDay","date","getDate","month","getMonth","year","getFullYear","main","temp","e","target","value","name","sys","country","Date","Math","round"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nconst api ={\n  key: \"82ea138518939bd04bbc2f5747a79df1\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n}\n\nfunction App(){\n\n  const [query,setQuery]=useState('');   \n  const [weather,setweather]=useState({});\n  const [weathers,setforecast]=useState({});\n\n\n  const search = evt =>{\n    if(evt.key === \"Enter\"){\n      fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\n      .then(res => res.json())\n      .then (result => {\n        setweather(result);\n        setforecast(result);\n        setQuery('');\n        console.log(result);\n      });\n    }\n  } \n  const dateBuilder=(d) => {\n    let months = [\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"december\"]\n    let days = [\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"]\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year= d.getFullYear();\n    return `${day} ${date} ${month} ${year}`\n  }\n\n  return(\n  <div className=\n  {typeof weather.main != \"undefined\" ? \n  ((weather.main.temp >24) ? \n  'app warm' : 'app') : 'app'}>\n  <main>\n    <div className=\"search-box\">\n    <input\n      type=\"text\"\n      className=\"search-bar\"\n      placeholder=\"Search...\"\n      onChange={e => setQuery(e.target.value)}\n      value={query}\n      onKeyPress={search}\n    />\n    </div>\n    {(typeof weather.main != \"undefined\") ? (\n    <div>\n      <div className=\"location-box\">\n    <div className=\"location\">{weather.name},{weather.sys.country}</div>\n        <div className=\"date\">{dateBuilder(new Date())}</div>\n      </div>\n      <div className=\"weather-box\">\n        <div className=\"temp\">\n          {Math.round(weather.main.temp)}c\n        </div>\n    <div className=\"weather\">{weather.weather[0].main}</div>\n      </div>\n    </div>\n    ) : ('')}\n  </main>\n\n  </div>\n  \n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}