{"ast":null,"code":"var _jsxFileName = \"/home/dev/Desktop/tic-tac-toe/whether-react/src/App.jsx\";\nimport React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport \"./sass/app.scss\";\nimport TopSection from \"./components/top/index\";\nimport BottomSection from \"./components/bottom/index\";\nimport axios from \"axios\";\nconst WEATHER_KEY = \"05fa14e773434825be0193343191301\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cityName: \"London\",\n      numForcastDays: 4,\n      isLoading: true\n    };\n  }\n\n  updateWeather() {\n    const {\n      cityName,\n      numForcastDays\n    } = this.state;\n    const URL = `https://api.apixu.com/v1/forecast.json?key=${WEATHER_KEY}  &q=${cityName} &days=${numForcastDays}`;\n    axios.get(URL).then(res => {\n      return res.data;\n    }).then(data => {\n      this.setState({\n        isLoading: false,\n        temp_c: data.current.temp_c,\n        isDay: data.current.is_day,\n        text: data.current.condition.text,\n        iconURL: data.current.condition.icon,\n        forecastdays: data.forecast.forecastday\n      });\n    }).catch(err => {\n      if (err) console.error(\"Cannot fetch Weather Data from API, \", err);\n    });\n  }\n\n  componentDidMount() {\n    const {\n      eventEmitter\n    } = this.props;\n    this.updateWeather();\n    eventEmitter.on(\"updateWeather\", data => {\n      this.setState({\n        cityName: data\n      }, () => this.updateWeather());\n    });\n  }\n\n  render() {\n    const {\n      isLoading,\n      cityName,\n      temp_c,\n      isDay,\n      text,\n      iconURL,\n      forecastdays\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"app-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }, isLoading && /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 25\n      }\n    }, \"Loading Weather...\"), !isLoading && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"top-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TopSection, {\n      location: cityName,\n      temp_c: temp_c,\n      isDay: isDay,\n      text: text,\n      iconURL: iconURL,\n      eventEmitter: this.props.eventEmitter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bottom-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(BottomSection, {\n      forecastdays: forecastdays,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/dev/Desktop/tic-tac-toe/whether-react/src/App.jsx"],"names":["React","Component","TopSection","BottomSection","axios","WEATHER_KEY","App","constructor","props","state","cityName","numForcastDays","isLoading","updateWeather","URL","get","then","res","data","setState","temp_c","current","isDay","is_day","text","condition","iconURL","icon","forecastdays","forecast","forecastday","catch","err","console","error","componentDidMount","eventEmitter","on","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\nimport \"./sass/app.scss\";\n\nimport TopSection from \"./components/top/index\";\nimport BottomSection from \"./components/bottom/index\";\n\nimport axios from \"axios\";\n\nconst WEATHER_KEY = \"05fa14e773434825be0193343191301\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cityName: \"London\",\n      numForcastDays: 4,\n      isLoading: true\n    };\n  }\n\n  updateWeather() {\n    const { cityName, numForcastDays } = this.state;\n    const URL = `https://api.apixu.com/v1/forecast.json?key=${WEATHER_KEY}  &q=${cityName} &days=${numForcastDays}`;\n    axios\n      .get(URL)\n      .then(res => {\n        return res.data;\n      })\n      .then(data => {\n        this.setState({\n          isLoading: false,\n          temp_c: data.current.temp_c,\n          isDay: data.current.is_day,\n          text: data.current.condition.text,\n          iconURL: data.current.condition.icon,\n          forecastdays: data.forecast.forecastday\n        });\n      })\n      .catch(err => {\n        if (err) console.error(\"Cannot fetch Weather Data from API, \", err);\n      });\n  }\n\n  componentDidMount() {\n    const { eventEmitter } = this.props;\n\n    this.updateWeather();\n\n    eventEmitter.on(\"updateWeather\", data => {\n      this.setState({ cityName: data }, () => this.updateWeather());\n    });\n  }\n\n  render() {\n    const {\n      isLoading,\n      cityName,\n      temp_c,\n      isDay,\n      text,\n      iconURL,\n      forecastdays\n    } = this.state;\n\n    return (\n      <div className=\"app-container\">\n        <div className=\"main-container\">\n          {isLoading && <h3>Loading Weather...</h3>}\n          {!isLoading && (\n            <div className=\"top-section\">\n              <TopSection\n                location={cityName}\n                temp_c={temp_c}\n                isDay={isDay}\n                text={text}\n                iconURL={iconURL}\n                eventEmitter={this.props.eventEmitter}\n              />\n            </div>\n          )}\n          <div className=\"bottom-section\">\n            <BottomSection forecastdays={forecastdays} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}